# this variable defines oneMKL specific version
{% set mkl_version = "2022.2.1" %}
# this variable defines oneMKL specific buildnum
{% set mkl_buildnum = "16993" %}  # [linux]
{% set mkl_buildnum = "19754" %}  # [win]

{% set tbb_major_version = "2021" %}
{% set openmp_major_version = "2022" %}

{% set my_channel_targets = channel_targets if channel_targets is defined else ['conda-forge', 'defaults'] %}

{% set intel_ch = "https://software.repos.intel.com/python/conda" %}
# use this if our build script changes and we need to increment beyond intel's version
{% set dstbuildnum = '6' %}

package:
  name: intel_repack
  version: {{ mkl_version }}

source:
  - url: {{ intel_ch }}/{{ target_platform }}/mkl-{{ mkl_version }}-intel_{{ mkl_buildnum }}.tar.bz2
    folder: mkl
    no_hoist: true
  - url: {{ intel_ch }}/{{ target_platform }}/mkl-devel-{{ mkl_version }}-intel_{{ mkl_buildnum }}.tar.bz2
    folder: mkl-devel
    no_hoist: true
  - url: {{ intel_ch }}/{{ target_platform }}/mkl-include-{{ mkl_version }}-intel_{{ mkl_buildnum }}.tar.bz2
    folder: mkl-include
    no_hoist: true
  - url: {{ intel_ch }}/{{ target_platform }}/mkl-static-{{ mkl_version }}-intel_{{ mkl_buildnum }}.tar.bz2
    folder: mkl-static
    no_hoist: true
build:
  number: {{ mkl_buildnum|int + dstbuildnum|int }}
  binary_relocation: false
  detect_binary_files_with_prefix: false
  skip: True                                  # [not (linux64 or win)]
  missing_dso_whitelist:
    # normal linux stuff that would go away if we had libgcc-ng in the run deps
    - /lib*/ld-linux.so.2
    - /lib64/ld-linux-x86-64.so.2
    - /lib*/libpthread.so.0
    - /lib*/libdl.so.2
    - /lib*/libgcc_s.so.1
    - /lib*/libc.so.6
    - /lib*/libm.so.6
    # these two really shouldn't be here.  See mkl_repack_and_patchelf.sh
    - libiomp5.so
    - libcoi_device.so.0
    - /usr/lib/libstdc++.so.6       # [linux]
    - /usr/lib64/libstdc++.so.6     # [linux]
    # hooray, windows
    - "C:\\Windows\\System32\\WINTRUST.dll"

outputs:
  - name: mkl
    version: {{ mkl_version }}
    script: repack.sh   # [linux]
    script: repack.bat  # [win]
    number: {{ mkl_buildnum|int + dstbuildnum|int }}
    build:
      binary_relocation: False
      overlinking_ignore_patterns:
        - "**"
    requirements:
      {% if win or 'conda-forge' not in my_channel_targets %}
      host:
        - intel-openmp {{ openmp_major_version }}.*
        - tbb {{ tbb_major_version }}.*
      run:
        - intel-openmp {{ openmp_major_version }}.*
        - tbb {{ tbb_major_version }}.*
      {% else %}
      host:
        - llvm-openmp
        - tbb {{ tbb_major_version }}.*
      run:
        - llvm-openmp
        - tbb {{ tbb_major_version }}.*
      {% endif %}
    about:
      home: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html
      license: LicenseRef-IntelSimplifiedSoftwareOct2022
      license_family: Proprietary
      license_file:
         - mkl/info/licenses/license.txt
         - mkl/info/licenses/tpp.txt
      summary: Intel® oneAPI Math Kernel Library runtime libraries
      description: |
        Intel® oneAPI Math Kernel Library is Intel®-Optimized Math Library for Numerical Computing on CPUs & GPUs
        This package is a repackaged set of binaries obtained directly from Intel\'s anaconda.org channel.
      doc_url: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html
    test:
      commands:
        - ls -A $PREFIX/lib/*  # [linux]
        - test -f $PREFIX/lib/libmkl_core.so.2  # [linux]
        - if not exist %LIBRARY_BIN%\\mkl_core.2.dll exit 1  # [win]

  - name: mkl-include
    version: {{ mkl_version }}
    script: repack.sh   # [linux]
    script: repack.bat  # [win]
    number: {{ mkl_buildnum|int + dstbuildnum|int }}
    about:
      home: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html
      license: LicenseRef-IntelSimplifiedSoftwareOct2022
      license_family: Proprietary
      license_file:
         - mkl-include/info/licenses/license.txt
         - mkl-include/info/licenses/tpp.txt
      summary: Headers for building against Intel® oneMKL libraries
      description: |
        Intel® oneAPI Math Kernel Library headers for developing software that uses oneMKL
        This package is a repackaged set of binaries obtained directly from Intel\'s anaconda.org channel.
      doc_url: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html
    test:
      commands:
        - ls -A $PREFIX/include/*  # [linux]
        - test -f $PREFIX/include/mkl.h  # [linux]
        - if not exist %LIBRARY_INC%\\mkl.h exit 1  # [win]

  - name: mkl-devel
    version: {{ mkl_version }}
    script: repack.sh   # [linux]
    script: repack.bat  # [win]
    number: {{ mkl_buildnum|int + dstbuildnum|int }}
    build:
      run_exports:
        - {{ pin_subpackage('mkl') }}
        {% if 'conda-forge' not in my_channel_targets %}
        - {{ pin_subpackage('blas', exact=True) }}
        {% endif %}
    requirements:
      run:
        - {{ pin_subpackage('mkl', exact=True) }}
        - {{ pin_subpackage('mkl-include', exact=True) }}
        {% if 'conda-forge' not in my_channel_targets %}
        - blas * mkl
        {% endif %}
    about:
      home: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html
      summary: Devel package for building against Intel® oneMKL libraries
      description: |
        Intel® oneAPI Math Kernel Library headers and libraries for developing software that uses oneMKL
        This package is a repackaged set of binaries obtained directly from Intel\'s anaconda.org channel.
      license: LicenseRef-IntelSimplifiedSoftwareOct2022
      license_family: Proprietary
      license_file:
         - mkl-devel/info/licenses/license.txt
         - mkl-devel/info/licenses/tpp.txt
    # TODO: at 2022.2.1 it is just a meta package
    # test:
    #   commands:
    #     - ls -A $PREFIX/lib/*  # [linux]
    #     - ls -A $PREFIX/include/*  # [linux]
    #     - ls -A $PREFIX/lib/pkgconfig/*  # [linux]
    #     - test -f $PREFIX/lib/pkgconfig/mkl-sdl.pc  # [linux]
    #     - if not exist %LIBRARY_LIB%\\pkgconfig\\mkl-sdl.pc exit 1  # [win]

  - name: mkl-static
    version: {{ mkl_version }}
    script: repack.sh   # [linux]
    script: repack.bat  # [win]
    number: {{ mkl_buildnum|int + dstbuildnum|int }}
    requirements:
      run:
        - {{ pin_subpackage('mkl-include', exact=True) }}
        - tbb {{ tbb_major_version }}.*
        {% if win or 'conda-forge' not in my_channel_targets %}
        - intel-openmp {{ openmp_major_version }}.*
        {% else %}
        - llvm-openmp
        {% endif %}
        {% if 'conda-forge' not in my_channel_targets %}
        - blas * mkl
        {% endif %}
    about:
      home: https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html
      summary: Static libraries for Intel® oneMKL libraries
      description: |
        Intel® oneAPI Math Kernel Library static libraries for developing software that uses oneMKL
        This package is a repackaged set of binaries obtained directly from Intel\'s anaconda.org channel.
      license: LicenseRef-IntelSimplifiedSoftwareOct2022
      license_family: Proprietary
      license_file:
         - mkl-static/info/licenses/license.txt
         - mkl-static/info/licenses/tpp.txt
    test:
      commands:
        - ls -A $PREFIX/lib/*  # [linux]
        - test -f $PREFIX/lib/libmkl_core.a  # [linux]
        - if not exist %LIBRARY_LIB%\\mkl_core.lib exit 1  # [win]
# please the linter
about:
  home: https://github.com/conda-forge/intel_repack-feedstock
  license: LicenseRef-IntelSimplifiedSoftwareOct2022
  summary: 'Repackaged Intel libraries'

extra:
  recipe-maintainers:
    - isuruf
    - beckermr
    - napetrov
    - oleksandr-pavlyk 
    - alexsandruss
    - ZzEeKkAa
