
{% set version = "2020.1" %}
{% set buildnum = "217" %}  # [linux]
{% set buildnum = "216" %}  # [not linux]

# These numbers change on each release
{% set mkl_num = "16533" %}  # [linux]
{% set daal_num = "16536" %}  # [linux]
{% set mkl_num = "16543" %}  # [win64]
{% set daal_num = "16545" %}  # [win64]
{% set mkl_num = "16525" %}  # [osx]
{% set daal_num = "16570" %}  # [osx]
{% set intel_url = "http://registrationcenter-download.intel.com/akdlm/irc_nas/tec" %}

# use this if our build script changes and we need to increment beyond
# Intel's version
{% set dstbuildnum = '3' %}

package:
  name: intel_repack
  version: {{ version }}

# Note the magic numbers in the builds
source:
  - url: {{ intel_url }}/{{ mkl_num }}/l_mkl_{{ version }}.{{ buildnum }}.tgz  # [linux]
    folder: l_mkl_{{ version }}.{{ buildnum }}  # [linux]
    sha256: 082a4be30bf4f6998e4d6e3da815a77560a5e66a68e254d161ab96f07086066d  # [linux]
  - url: {{ intel_url }}/{{ daal_num }}/l_daal_{{ version }}.{{ buildnum }}.tgz  # [linux]
    folder: l_daal_{{ version }}.{{ buildnum }}  # [linux]
    sha256: 3f84dea0ce1038ac1b9c25b3e2c02e9fac440fa36cc8adfce69edfc06fe0edda  # [linux]
  - url: {{ intel_url }}/{{ mkl_num }}/w_mkl_{{ version }}.{{ buildnum }}.exe  # [win64]
    sha256: 129610f33db871ccd2f2b05f7392c1821403efecd1679614848362eae92963f5  # [win64]
  - url: {{ intel_url }}/{{ daal_num }}/w_daal_{{ version }}.{{ buildnum }}.exe  # [win64]
    sha256: c313ef2ff8a0bf13ba89366b0a51b4dae09af29ab08c9d2a78d19f3b54136ea5  # [win64]
  - url: {{ intel_url }}/{{ mkl_num }}/m_mkl_{{ version }}.{{ buildnum }}.dmg  # [osx]
    sha256: aac27e5bc872620ead693f7441b399c2a1fa13797d1b0f9c4917003bfc13d3b5  # [osx]
  - url: {{ intel_url }}/{{ daal_num }}/m_daal_{{ version }}.{{ buildnum }}.dmg  # [osx]
    sha256: 368a675b88c961305dc03f3cf29133bd66c92f0f9e72d3c96d6dda70a4ba0d04  # [osx]
  - path: repack.{{ target_platform }}.yaml

build:
  number: {{ buildnum|int + dstbuildnum|int }}
  skip: True  # [linux32 or win32 or not x86]
  binary_relocation: false
  detect_binary_files_with_prefix: false
  missing_dso_whitelist:
    - "$RPATH/libpthread.so.0"
    - "$RPATH/libdl.so.2"
    - "$RPATH/libc.so.6"
    - "$RPATH/libm.so.6"
    - "$RPATH/libgcc_s.so.1"
    - "$RPATH/libtbb.so.2"
    - "$RPATH/libtbbmalloc.so.2"
    - "/usr/lib/libc++.1.dylib"       # [osx]
    - "$RPATH/libtbb.dylib"           # [osx]
    - "$RPATH/libtbbmalloc.dylib"     # [osx]
    - "$RPATH/libiomp5.dylib"         # [osx]
    - "C:\\Windows\\System32\\WINTRUST.dll"


outputs:
  - name: mkl
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    requirements:
      build:
        - rpm-tools  # [linux]
      host:
        - python >=3.5
        - llvm-openmp
      run:
        - llvm-openmp
    about:
      home: https://software.intel.com/en-us/mkl
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: Math library for Intel and compatible processors
      description: >-
        Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
      doc_url: https://software.intel.com/en-us/mkl/documentation
    test:
      commands:
        - ls -A $PREFIX/lib/libmkl*  # [unix]

  - name: mkl-static
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    requirements:
      build:
        - rpm-tools  # [linux]
      run:
        - {{ pin_subpackage('mkl-include', exact=True) }}
        - tbb {{ version.split('.')[0] }}.*
    about:
      home: https://software.intel.com/en-us/daal
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: Static libraries for MKL
      description: >-
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
    test:
      commands:
        - ls -A $PREFIX/lib/libmkl*  # [unix]

  - name: mkl-include
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    requirements:
      build:
        - rpm-tools  # [linux]
    about:
      home: https://software.intel.com/en-us/mkl
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: MKL headers for developing software that uses MKL
      description: >-
        Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
      doc_url: https://software.intel.com/en-us/mkl/documentation
    test:
      commands:
        - ls -A $PREFIX/include/*  # [unix]

  - name: mkl-devel
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    build:
      # we had to fix site.cfg in 2019.1.  We're off by one
      number: {{ buildnum|int + dstbuildnum|int + 1 }}
      # when stuff is built with MKL, ensure that constraint makes mkl
      # runtime libs as new or newer than build version
      run_exports:
        - {{ pin_subpackage('mkl') }}
    requirements:
      build:
        - rpm-tools  # [linux]
      run:
        - {{ pin_subpackage('mkl', exact=True) }}
        - {{ pin_subpackage('mkl-include', exact=True) }}
    about:
      home: https://software.intel.com/en-us/mkl
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: MKL headers for developing software that uses MKL
      description: >-
        Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
      doc_url: https://software.intel.com/en-us/mkl/documentation
    test:
      commands:
        - ls -A $PREFIX/include/*  # [unix]
        - ls -A $PREFIX/lib/*  # [unix]

  - name: daal
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    requirements:
      build:
        - rpm-tools  # [linux]
      host:
        - python >=3.5
        - tbb {{ version.split('.')[0] }}.*
      run:
        - tbb {{ version.split('.')[0] }}.*
    about:
      home: https://software.intel.com/en-us/daal
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: DAAL runtime libraries
      description: >-
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
    test:
      commands:
        - ls -A $PREFIX/lib/libdaal*  # [unix]

  - name: daal-include
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    requirements:
      build:
        - rpm-tools  # [linux]
    about:
      home: https://software.intel.com/en-us/daal
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: Headers for building against DAAL libraries
      description: >-
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
    test:
      commands:
        - ls -A $PREFIX/include/*  # [unix]

  - name: daal-static
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    requirements:
      build:
        - rpm-tools  # [linux]
      run:
        - {{ pin_subpackage('daal-include', exact=True) }}
        - tbb {{ version.split('.')[0] }}.*
    about:
      home: https://software.intel.com/en-us/daal
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: Static libraries for DAAL
      description: >-
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
    test:
      commands:
        - ls -A $PREFIX/lib/libdaal*  # [unix]

  - name: daal-devel
    script: repack.py
    script_interpreter: python repack.py -a {{ target_platform }}
    build:
      run_exports:
        - {{ pin_subpackage('daal') }}
    requirements:
      build:
        - rpm-tools  # [linux]
      run:
        - {{ pin_subpackage('daal-include', exact=True) }}
        - {{ pin_subpackage('daal', exact=True) }}
    about:
      home: https://software.intel.com/en-us/daal
      license: LicenseRef-ProprietaryIntel
      license_family: Proprietary
      license_file: LICENSE.TXT
      summary: Devel package for building things linked against DAAL shared libraries
      description: >-
        This package is a repackaged set of binaries obtained directly from Intel\'s website.
    test:
      commands:
        - ls -A $PREFIX/lib/libdaal*  # [unix]
        - ls -A $PREFIX/include/*  # [unix]

about:
  home: https://software.seek.intel.com/performance-libraries
  license: LicenseRef-ProprietaryIntel
  summary: 'Repackaged Intel libraries'

extra:
  recipe-maintainers:
    - isuruf
    - beckermr
    - nowster
